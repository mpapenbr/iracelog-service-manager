name: Build image on Tag
on:
  push:
    tags:
      - "v*"

jobs:
  verify:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/vscode/devcontainers/python:3.9
    services:
      postgres: 
        image: postgres:13
        env:
          POSTGRES_PASSWORD: secret

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: pip install -r requirements_ci.txt
    
    - name: Prepare db and run tests
      run: |
        tox -e alembic
        tox -v
      env: 
        TEST_DB_URL: postgresql://postgres:secret@postgres:5432/postgres
  
  buildImage:
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Prep
        id: prep
        run: |
          GHCR_IMAGE=ghcr.io/${{ github.repository_owner }}/iracelog-service-manager
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${GHCR_IMAGE}:${VERSION}"
          if [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${GHCR_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=ghcr_image::${GHCR_IMAGE}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}


